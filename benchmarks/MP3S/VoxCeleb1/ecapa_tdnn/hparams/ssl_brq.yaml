# ################################
# Recipe for training then testing speaker embeddings using the VoxCeleb1 Dataset.
# Embeddings are used using the ECAPA-TDNN network
#
# Authors
# * Salah Zaiem 2023
# * Youcef Kemiche 2023
# ################################

# Basic parameters
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/VoxCeleb1/brqb_etdnn/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
# Data files
data_folder: !PLACEHOLDER  # e.g. /path/to/Voxceleb
csv_location: /users/rwhetten/ICASSP_2024/best-rq-test/results/VoxCeleb1/csv
train_annotation: !ref <csv_location>/train.csv
valid_annotation: !ref <csv_location>/dev.csv
num_layers_ssl: 13
ssl_hub: !PLACEHOLDER

verification_file: !ref <csv_location>/veri_test2.txt #path/to/veri_test2.txt

skip_prep: True
ckpt_interval_minutes: 15 # save checkpoint every N min

# Training parameters
precision: fp32
number_of_epochs: 15
batch_size: 16
lr: 0.001
lr_final: 0.0001
mask_length: 10
mask_prob: 0.65
lr_weights: 0.01
sample_rate: 16000
shuffle: True
random_chunk: True
sentence_len: 3

# Feature parameters

encoder_dim: 512

# Number of speakers
out_n_neurons: 1211  #1211 for vox1  # 5994 for vox2, 7205 for vox1+vox2

freeze_encoder: True
dataloader_options:
    batch_size: !ref <batch_size>
    shuffle: !ref <shuffle>

embedding_model: !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
    input_size: !ref <encoder_dim>
    channels: [512, 512, 512, 512, 1536]
    kernel_sizes: [5, 3, 3, 3, 1]
    dilations: [1, 2, 3, 4, 1]
    groups: [1, 1, 1, 1, 1]
    attention_channels: 64
    lin_neurons: 512

classifier: !new:speechbrain.lobes.models.ECAPA_TDNN.Classifier
    input_size: 512
    out_neurons: !ref <out_n_neurons>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>


####################### Pre-Trained Model parameters ###########################
# Transformer
d_model: !ref <encoder_dim>
nhead: 8 # table 1 https://arxiv.org/pdf/2010.10504.pdf
num_encoder_layers: 12 # section 4.1.1
num_decoder_layers: 0
d_ffn: 2048
transformer_dropout: 0.1
transformer_activation: !name:torch.nn.GELU
transformer_output_neurons: 5000
attention_type: RelPosMHAXL
encoder_module: conformer

# Feature parameters
n_fft: 400
n_mels: 80

# quantizer parameters not using though for finetunning
p_input: 320
cb_dim: 16
cb_vocab: 8192

############################## Pre-Trained Model ################################

compute_features: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global
    update_until_epoch: 4

CNN: !new:speechbrain.lobes.models.convolution.ConvolutionFrontEnd
    input_shape: (8, 10, 80)
    num_blocks: 2
    num_layers_per_block: 1
    out_channels: (128, 32)
    kernel_sizes: (3, 3)
    strides: (2, 2)
    residuals: (False, False)

Transformer: !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerASR # yamllint disable-line rule:line-length
    input_size: 640
    tgt_vocab: !ref <transformer_output_neurons>
    d_model: !ref <d_model>
    nhead: !ref <nhead>
    num_encoder_layers: !ref <num_encoder_layers>
    num_decoder_layers: !ref <num_decoder_layers>
    d_ffn: !ref <d_ffn>
    dropout: !ref <transformer_dropout>
    activation: !ref <transformer_activation>
    encoder_module: !ref <encoder_module>
    attention_type: !ref <attention_type>
    normalize_before: True
    causal: False
    output_hidden_states: True


wrapper: !new:speechbrain.lobes.models.transformer.TransformerASR.WeightedEncoderWrapper
   transformer: !ref <Transformer>
   num_layers: !ref <num_layers_ssl>
   freeze: !ref <freeze_encoder>

# Quantizer: !new:speechbrain.nnet.quantisers.RandomProjectionQuantizer
#     # projection
#     input_dim: !ref <p_input>
#     # codebook
#     cb_dim: !ref <cb_dim>    
#     cb_vocab: !ref <cb_vocab>

# linear: !new:speechbrain.nnet.linear.Linear
#     input_size: !ref <d_model>
#     n_neurons: !ref <cb_vocab>

pt_model: !new:torch.nn.ModuleList
    - [!ref <CNN>, !ref <wrapper>,]

weighted_ssl_model: !new:speechbrain.lobes.models.transformer.TransformerASR.ComputeFeaturesWrapper
   compute_features: !ref <compute_features>
   normalize: !ref <normalize>
   model: !ref <pt_model>

#####################################################################


modules:
    weighted_ssl_model: !ref <weighted_ssl_model>
    embedding_model: !ref <embedding_model>
    classifier: !ref <classifier>

model: !new:torch.nn.ModuleList
    - [!ref <embedding_model>, !ref <classifier>]


# Cost + optimization
compute_error: !name:speechbrain.nnet.losses.classification_error

compute_cost: !new:speechbrain.nnet.losses.LogSoftmaxWrapper
    loss_fn: !new:speechbrain.nnet.losses.AdditiveAngularMargin
        margin: 0.2
        scale: 30


model_opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: 0.000002

lr_annealing: !new:speechbrain.nnet.schedulers.LinearScheduler
    initial_value: !ref <lr>
    final_value: !ref <lr_final>
    epoch_count: !ref <number_of_epochs>

weights_opt_class: !name:torch.optim.Adam
    lr: !ref <lr_weights>

lr_annealing_weights: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_weights>
    improvement_threshold: 0.0025
    annealing_factor: 0.9
    patient: 0

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
   collect_in: !ref <save_folder>
   loadables:
      pt_model: !ref <pt_model>
      normalize: !ref <normalize>
   paths:
      pt_model: !ref <ssl_hub>/model.ckpt
      normalize: !ref <ssl_hub>/normalizer.ckpt


# Logging + checkpoints
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.classification_error
        reduction: batch

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        embedding_model: !ref <embedding_model>
        scheduler_wav2vec: !ref <lr_annealing_weights>
        ssl_model: !ref <weighted_ssl_model>
        classifier: !ref <classifier>
        counter: !ref <epoch_counter>

train_data: /lustre/fsn1/projects/rech/nkp/uaj64gk/voxceleb/csv/train.csv
enrol_data: /lustre/fsn1/projects/rech/nkp/uaj64gk/voxceleb/csv/enrol.csv
test_data: /lustre/fsn1/projects/rech/nkp/uaj64gk/voxceleb/csv/test.csv

verif_batch_size: 4
n_train_snts: 300000 # used for normalization stats


# Dataloader options
train_dataloader_opts:
    batch_size: !ref <batch_size>

enrol_dataloader_opts:
    batch_size: !ref <batch_size>

test_dataloader_opts:
    batch_size: !ref <batch_size>


mean_var_norm_emb: !new:speechbrain.processing.features.InputNormalization
    norm_type: global
    std_norm: False
