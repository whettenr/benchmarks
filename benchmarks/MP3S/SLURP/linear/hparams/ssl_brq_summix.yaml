# ############################################################################
# Recipe for "direct" (speech -> scenario)
# "Intent" classification using SLURP Dataset.
# 18 Scenarios classes are present in SLURP (calendar, email ...)
# We encode input waveforms into features using a SSL encoder.
# The probing is done using time-pooling followed by a linear classifier.
# Authors
# * Salah Zaiem 2023
# * Youcef Kemiche 2023
############################################################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/SLURP/brq/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
# The SLURP dataset will be automatically downloaded in the specified folder
data_folder: /users/rwhetten/benchmarks/benchmarks/MP3S/SLURP
# data_folder_rirs: !ref <data_folder>
train_splits: ["train_real"]
# csv_train: !ref <output_folder>/train-type=direct.csv
# csv_valid: !ref <output_folder>/devel-type=direct.csv
# csv_test: !ref <output_folder>/test-type=direct.csv
csv_location: /users/rwhetten/benchmarks/benchmarks/MP3S/SLURP/results/csv
csv_train: !ref <csv_location>/train-type=direct.csv
csv_valid: !ref <csv_location>/devel-type=direct.csv
csv_test: !ref <csv_location>/test-type=direct.csv

skip_prep: True
freeze_encoder: True

compute_cost: !name:speechbrain.nnet.losses.nll_loss
# URL for the encoder2 model, you can change to benchmark diffrenet models

num_layers_ssl: 13  #Number of layers in the SSL model (should be 25 for large)
ssl_hub: !PLACEHOLDER
encoder_dim: 512

# Training parameters
precision: fp32
number_of_epochs: 20
batch_size: 2
test_batch_size: 1
lr: 0.0002
lr_weights: 0.01
# token_type: unigram # ["unigram", "bpe", "char"]
sorting: random
ckpt_interval_minutes: 15 # save checkpoint every N min

# Model parameters
sample_rate: 16000
emb_size: 128
dec_neurons: 512
output_neurons: 18 # index(eos/bos) = 0

# Dataloader options
train_dataloader_opts:
   batch_size: !ref <batch_size>
   shuffle: True
   num_workers: 2  # 2 on linux but 0 works on windows
   drop_last: False

valid_dataloader_opts:
   batch_size: !ref <batch_size>

test_dataloader_opts:
   batch_size: !ref <test_batch_size>

# Decoding parameters
bos_index: 0
eos_index: 0
min_decode_ratio: 0.0
max_decode_ratio: 10.0
slu_beam_size: 80
eos_threshold: 1.5
temperature: 1.25

dataloader_opts:
   batch_size: !ref <batch_size>
   shuffle: True

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
   limit: !ref <number_of_epochs>

# Models
####################### Pre-Trained Model parameters ###########################
# Transformer
d_model: !ref <encoder_dim>
nhead: 8 # table 1 https://arxiv.org/pdf/2010.10504.pdf
num_encoder_layers: 12 # section 4.1.1
num_decoder_layers: 0
d_ffn: 2048
transformer_dropout: 0.1
transformer_activation: !name:torch.nn.GELU
transformer_output_neurons: 5000
encoder_module: conformer

attention_type: SummaryMixing # SummaryMixing, regularMHA or RelPosMHAXL
mode: SummaryMixing # SummaryMixing or SummaryMixing-lite
csgu_linear_units: 3072
csgu_kernel_size: 31
local_proj_hid_dim: [512]
local_proj_out_dim: 512
summary_hid_dim: [512]
summary_out_dim: 512

# Feature parameters
n_fft: 400
n_mels: 80

# quantizer parameters not using though for finetunning
p_input: 320
cb_dim: 16
cb_vocab: 8192

############################## Pre-Trained Model ################################

compute_features: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global
    update_until_epoch: 4

CNN: !new:speechbrain.lobes.models.convolution.ConvolutionFrontEnd
    input_shape: (8, 10, 80)
    num_blocks: 2
    num_layers_per_block: 1
    out_channels: (128, 32)
    kernel_sizes: (3, 3)
    strides: (2, 2)
    residuals: (False, False)

Transformer: !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerASR # yamllint disable-line rule:line-length
    input_size: 640
    tgt_vocab: !ref <transformer_output_neurons>
    d_model: !ref <d_model>
    nhead: !ref <nhead>
    num_encoder_layers: !ref <num_encoder_layers>
    num_decoder_layers: !ref <num_decoder_layers>
    d_ffn: !ref <d_ffn>
    dropout: !ref <transformer_dropout>
    activation: !ref <transformer_activation>
    encoder_module: !ref <encoder_module>

    attention_type: !ref <attention_type>
    csgu_linear_units: !ref <csgu_linear_units>
    kernel_size: !ref <csgu_kernel_size>
    local_proj_hid_dim: !ref <local_proj_hid_dim>
    local_proj_out_dim: !ref <local_proj_out_dim>
    summary_hid_dim: !ref <summary_hid_dim>
    summary_out_dim: !ref <summary_out_dim>
    mode: !ref <mode>

    normalize_before: True
    causal: False
    output_hidden_states: True


wrapper: !new:speechbrain.lobes.models.transformer.TransformerASR.WeightedEncoderWrapper
   transformer: !ref <Transformer>
   num_layers: !ref <num_layers_ssl>
   freeze: !ref <freeze_encoder>

Quantizer: !new:speechbrain.nnet.quantisers.RandomProjectionQuantizer
    # projection
    input_dim: !ref <p_input>
    # codebook
    cb_dim: !ref <cb_dim>    
    cb_vocab: !ref <cb_vocab>

linear: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <cb_vocab>

pt_model: !new:torch.nn.ModuleList
    - [!ref <CNN>, !ref <wrapper>, !ref <Quantizer>, !ref <linear>]

weighted_ssl_model: !new:speechbrain.lobes.models.transformer.TransformerASR.ComputeFeaturesWrapper
   compute_features: !ref <compute_features>
   normalize: !ref <normalize>
   model: !ref <pt_model>

#####################################################################

avg_pool: !new:speechbrain.nnet.pooling.StatisticsPooling
   return_std: False

output_mlp: !new:speechbrain.nnet.linear.Linear
   input_size: !ref <encoder_dim>
   n_neurons: 18
   bias: False

model: !new:torch.nn.ModuleList
   - [!ref <output_mlp>]

modules:
   avg_pool: !ref <avg_pool>
   output_mlp: !ref <output_mlp>
   weighted_ssl_model: !ref <weighted_ssl_model>

tokenizer: !new:sentencepiece.SentencePieceProcessor


error_stats: !name:speechbrain.utils.metric_stats.MetricStats
   metric: !name:speechbrain.nnet.losses.classification_error
      reduction: batch

model_opt_class: !name:torch.optim.Adam
   lr: !ref <lr>

weights_opt_class: !name:torch.optim.Adam
   lr: !ref <lr_weights>

lr_annealing_model: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr>
   improvement_threshold: 0.0025
   annealing_factor: 0.8
   patient: 0

lr_annealing_weights: !new:speechbrain.nnet.schedulers.NewBobScheduler
   initial_value: !ref <lr_weights>
   improvement_threshold: 0.0025
   annealing_factor: 0.9

pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
   collect_in: !ref <save_folder>
   loadables:
      pt_model: !ref <pt_model>
      normalize: !ref <normalize>
   paths:
      pt_model: !ref <ssl_hub>/model.ckpt
      normalize: !ref <ssl_hub>/normalizer.ckpt

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
   checkpoints_dir: !ref <save_folder>
   recoverables:
      model: !ref <model>
      ssl_model: !ref <weighted_ssl_model>
      scheduler_model: !ref <lr_annealing_model>
      scheduler_encoder: !ref <lr_annealing_weights>
      counter: !ref <epoch_counter>

log_softmax: !new:speechbrain.nnet.activations.Softmax
   apply_log: True

seq_cost: !name:speechbrain.nnet.losses.nll_loss
   label_smoothing: 0.1

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
   save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
   split_tokens: True
